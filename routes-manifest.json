{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "origin-when-cross-origin"
        },
        {
          "key": "Permissions-Policy",
          "value": "camera=(), microphone=(), geolocation=()"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    }
  ],
  "dynamicRoutes": [
    {
      "page": "/api/attendance/stats/[id]",
      "regex": "^/api/attendance/stats/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/attendance/stats/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/schedule/student/[id]",
      "regex": "^/api/schedule/student/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/schedule/student/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/blog/articles/[id]",
      "regex": "^/blog/articles/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/blog/articles/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin-dashboard",
      "regex": "^/admin\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin\\-dashboard(?:/)?$"
    },
    {
      "page": "/admin-login",
      "regex": "^/admin\\-login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin\\-login(?:/)?$"
    },
    {
      "page": "/admin-settings",
      "regex": "^/admin\\-settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin\\-settings(?:/)?$"
    },
    {
      "page": "/blog",
      "regex": "^/blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blog(?:/)?$"
    },
    {
      "page": "/blog/arabic-language",
      "regex": "^/blog/arabic\\-language(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blog/arabic\\-language(?:/)?$"
    },
    {
      "page": "/blog/articles",
      "regex": "^/blog/articles(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blog/articles(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/faq",
      "regex": "^/faq(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/faq(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/materials",
      "regex": "^/materials(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/materials(?:/)?$"
    },
    {
      "page": "/pricing",
      "regex": "^/pricing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/pricing(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/schedule",
      "regex": "^/schedule(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/schedule(?:/)?$"
    },
    {
      "page": "/services",
      "regex": "^/services(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/welcome-new-student",
      "regex": "^/welcome\\-new\\-student(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/welcome\\-new\\-student(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}